import{_ as o,c as t,o as a,ae as c}from"./chunks/framework.BkDzuGyC.js";const u=JSON.parse('{"title":"事件轮询","description":"","frontmatter":{},"headers":[],"relativePath":"guide/a/p2.md","filePath":"guide/a/p2.md"}'),r={name:"guide/a/p2.md"};function d(s,e,i,n,p,l){return a(),t("div",null,e[0]||(e[0]=[c('<h1 id="事件轮询" tabindex="-1">事件轮询 <a class="header-anchor" href="#事件轮询" aria-label="Permalink to &quot;事件轮询&quot;">​</a></h1><p>JavaScript 是单线程语言，为了处理异步任务，采用了事件轮询机制，当异步任务完成后，其回调函数会被放入相应的任务队列中，微任务队列和宏任务队列，事件轮询 在调用栈清空后，会把任务队列中的回调函数推入调用栈中执行，其中微任务的优先级高于宏任务，会在宏任务结束后优先执行所有的微任务，然后再执行宏任务，如此循环。</p><p>在事件循环中，JavaScript 将任务分为<strong>宏任务（Macro Task）</strong> 和 <strong>微任务（Micro Task）</strong> 两类：</p><ul><li><p><strong>宏任务</strong>包括： <code>script</code> 整体代码、<code>setTimeout</code>、<code>setInterval</code>、<code>I/O</code> 操作、<code>UI 渲染</code> 等。</p></li><li><p><strong>微任务</strong>包括： <code>Promise.then</code> / <code>.catch</code> / <code>.finally</code>、<code>queueMicrotask</code>、<code>MutationObserver</code> 等。</p></li></ul>',4)]))}const g=o(r,[["render",d]]);export{u as __pageData,g as default};
